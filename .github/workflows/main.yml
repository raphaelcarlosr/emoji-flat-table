# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Flat Data
        # You may pin to the exact commit or the version.
        # uses: githubocto/flat@a49c8cd6d75e4dfd0c0d6f451b7199efde871368
        uses: githubocto/flat@v3.2.0
        # with:
          # The filename to use for writing data.
          # downloaded_filename: # optional
          # A URL containing data to fetch.
          # http_url: # optional
          # A string to send as a header for authorizing API requests.
          # authorization: # optional
          # A string array of secrets to strip from the http_url or a string boolean
          # mask: # optional
          # A connection string for making a SQL query.
          # sql_connstring: # optional
          # A path (relative to the root of your repo) of a SQL query file to execute for fetching data.
          # sql_queryfile: # optional, default is .github/workflows/query.sql
          # A JSON string representing a configuration passed to TypeORMs createConnection function
          # typeorm_config: # optional
          # A path (relative to the root of your repo) or a URL to a deno postprocessing script.
          # postprocess: # optional      
